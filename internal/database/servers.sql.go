// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: servers.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createServer = `-- name: CreateServer :one
INSERT INTO servers (
        id,
        owner_id,
        server_name,
        created_at,
        updated_at
    )
VALUES ($1, $2, $3, $4, $5)
RETURNING id, owner_id, server_name, description, icon_url, banner_url, is_public, member_count, server_level, max_members, invite_code, created_at, updated_at
`

type CreateServerParams struct {
	ID         uuid.UUID `json:"id"`
	OwnerID    uuid.UUID `json:"owner_id"`
	ServerName string    `json:"server_name"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

func (q *Queries) CreateServer(ctx context.Context, arg CreateServerParams) (Server, error) {
	row := q.db.QueryRowContext(ctx, createServer,
		arg.ID,
		arg.OwnerID,
		arg.ServerName,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Server
	err := row.Scan(
		&i.ID,
		&i.OwnerID,
		&i.ServerName,
		&i.Description,
		&i.IconUrl,
		&i.BannerUrl,
		&i.IsPublic,
		&i.MemberCount,
		&i.ServerLevel,
		&i.MaxMembers,
		&i.InviteCode,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
