// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, email, handle, created_at, updated_at)
VALUES (
        $1,
        $2,
        $3,
        $4,
        $5
    )
RETURNING id, email, is_active, handle, first_name, last_name, bio, avatar_url, is_verified, created_at, updated_at
`

type CreateUserParams struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	Handle    string    `json:"handle"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Email,
		arg.Handle,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.IsActive,
		&i.Handle,
		&i.FirstName,
		&i.LastName,
		&i.Bio,
		&i.AvatarUrl,
		&i.IsVerified,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
